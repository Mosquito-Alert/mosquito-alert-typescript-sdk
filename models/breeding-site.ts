/* tslint:disable */
/* eslint-disable */
/**
 * Mosquito Alert API
 * Introducing API v1 for Mosquito Alert platform, a project desgined to facilitate citizen science initiatives and enable collaboration among scientists, public health officials, and environmental managers in the investigation and control of disease-carrying mosquitoes.
 *
 * The version of the OpenAPI document: v1
 * Contact: it@mosquitoalert.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { BreedingSiteSiteType } from './breeding-site-site-type';
// May contain unused imports in some cases
// @ts-ignore
import type { Location } from './location';
// May contain unused imports in some cases
// @ts-ignore
import type { SimplePhoto } from './simple-photo';

/**
 * 
 * @export
 * @interface BreedingSite
 */
export interface BreedingSite {
    /**
     * 
     * @type {string}
     * @memberof BreedingSite
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof BreedingSite
     */
    'short_id': string;
    /**
     * 
     * @type {string}
     * @memberof BreedingSite
     */
    'user_uuid': string;
    /**
     * 
     * @type {string}
     * @memberof BreedingSite
     */
    'created_at': string;
    /**
     * The date and time when the record was created, displayed in the local timezone specified for this entry.
     * @type {string}
     * @memberof BreedingSite
     */
    'created_at_local': string;
    /**
     * 
     * @type {string}
     * @memberof BreedingSite
     */
    'sent_at': string;
    /**
     * 
     * @type {string}
     * @memberof BreedingSite
     */
    'received_at': string;
    /**
     * Date and time when the report was last modified
     * @type {string}
     * @memberof BreedingSite
     */
    'updated_at': string;
    /**
     * 
     * @type {Location}
     * @memberof BreedingSite
     */
    'location': Location;
    /**
     * Note user attached to report.
     * @type {string}
     * @memberof BreedingSite
     */
    'note'?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof BreedingSite
     */
    'tags'?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof BreedingSite
     */
    'published': boolean;
    /**
     * 
     * @type {Array<SimplePhoto>}
     * @memberof BreedingSite
     */
    'photos': Array<SimplePhoto>;
    /**
     * 
     * @type {BreedingSiteSiteType}
     * @memberof BreedingSite
     */
    'site_type'?: BreedingSiteSiteType;
    /**
     * Either if the user perceived water in the breeding site.
     * @type {boolean}
     * @memberof BreedingSite
     */
    'has_water'?: boolean | null;
    /**
     * Either if the breeding site is found in a public area.
     * @type {boolean}
     * @memberof BreedingSite
     */
    'in_public_area'?: boolean | null;
    /**
     * Either if the user perceived mosquitoes near the breeding site (less than 10 meters).
     * @type {boolean}
     * @memberof BreedingSite
     */
    'has_near_mosquitoes'?: boolean | null;
    /**
     * Either if the user perceived larvaes the breeding site.
     * @type {boolean}
     * @memberof BreedingSite
     */
    'has_larvae'?: boolean | null;
}



